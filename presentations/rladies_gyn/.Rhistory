separate(word, c("word1", "word2"), sep = " ") %>%
count(word1, word2, sort = TRUE) %>% view()
View(data)
View(data)
data <- unnested %>%
separate(word, c("word1", "word2"), sep = " ") %>%
count(word1, word2, sort = TRUE)
View(data)
View(stopwords_pt)
# Quebrando as frases em palavras
unnested <- data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = stringr::str_remove_all(DS_OBJETO, stopwords_pt$word)) %>%
unnest_tokens(word, DS_OBJETO, token = "ngrams", n = 2) %>%
# Removendo stopwords
dplyr::anti_join(stopwords_pt, by = c("word" = "word"))
data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = stringr::str_remove_all(DS_OBJETO, stopwords_pt$word))
data <- licitacao %>%
filter(TP_OBJETO == "COM") %>%
select(NR_LICITACAO, DS_OBJETO)
# Quebrando as frases em palavras
unnested <- data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = stringr::str_remove_all(DS_OBJETO, stopwords_pt$word)) %>%
unnest_tokens(word, DS_OBJETO, token = "ngrams", n = 2) %>%
# Removendo stopwords
dplyr::anti_join(stopwords_pt, by = c("word" = "word"))
library(purrr)
str_c("I feel ", emoticons_2(.))
str_c("I feel ", str_remove_all(.))
?str_c
mutate(DS_OBJETO = map(stopwords_pt, ~ str_remove_all(DS_OBJETO, .)) %>%
# Quebrando as frases em palavras
unnested <- data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = map(stopwords_pt, ~ str_remove_all(DS_OBJETO, .))) %>%
unnest_tokens(word, DS_OBJETO, token = "ngrams", n = 2) %>%
# Removendo stopwords
dplyr::anti_join(stopwords_pt, by = c("word" = "word"))
data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = map(stopwords_pt, ~ str_remove_all(DS_OBJETO, .)))
# Quebrando as frases em palavras
unnested <- data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = stringr::str_remove_all(DS_OBJETO, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
unnest_tokens(word, DS_OBJETO, token = "ngrams", n = 2) %>%
# Removendo stopwords
dplyr::anti_join(stopwords_pt, by = c("word" = "word"))
# Quebrando as frases em palavras
unnested <- data %>%
mutate(DS_OBJETO = str_to_lower(DS_OBJETO)) %>%
mutate(DS_OBJETO = stringr::str_remove_all(DS_OBJETO, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
unnest_tokens(word, DS_OBJETO, token = "ngrams", n = 2)
dataRelations <- unnested %>%
separate(word, c("word1", "word2"), sep = " ") %>%
count(word1, word2, sort = TRUE)
View(dataRelations)
install.packages("translateR")
install.packages("translate")
translate::translate("Hello", "en", "pt")
install.packages("RDRPOSTagger")
install.packages("rJava")
devtools::install_github("bnosac/RDRPOSTagger", build_vignettes = TRUE)
install.packages("NLP")
install.packages("openNLP")
install.packages('rJava')
install.packages('rJava')
install.packages("openNLP")
devtools::install_github("bnosac/RDRPOSTagger", build_vignettes = TRUE)
library(RDRPOSTagger)
rdr_available_models()
library(rJava)
View(data)
library(readxl)
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
View(df)
library(janitor)
df %>%
clean_names()
df <- df %>%
clean_names()
nome_aeroportos <- seq(0, nrow(df), by = 9)
nome_aeroportos <- seq(1, nrow(df), by = 9)
id_aeroportos <- seq(1, nrow(df), by = 9)
df %>%
slice(id_aeroportos) %>%
pull(discriminacao)
library(slice)
library(dplyr)
df %>%
slice(id_aeroportos) %>%
pull(discriminacao)
rep(df %>%
slice(id_aeroportos) %>%
pull(discriminacao), 9)
df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9))
df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
glimpse()
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
glimpse()
View(df)
install.packages("tidyxl")
library(tidyxl)
?xlsx_cells
df <- xlsx_cells("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- xlsx_cells("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves")
View(df)
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clean_names()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clean_names()
id_aeroportos <- seq(1, nrow(df), by = 9)
View(df)
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
glimpse()
View(df)
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Correios", skip = 4)
View(df)
df %>%
distinct(discriminacao)
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clean_names()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
glimpse()
df %>%
distinct(discriminacao)
clear_strings <- function(df){
df %>%
clean_names() %>%
mutate_if(is.character, str_to_lower)
}
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clear_strings()
clear_strings <- function(df){
df %>%
clean_names() %>%
mutate_if(is.character, stringr::str_to_lower)
}
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clear_strings()
glimpse(df)
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
View(df)
?seq
tipo_transporte = seq(c("regular", "não regular"), each = c(2, 3))
tipo_transporte = rep(c("regular", "não regular"), each = c(2, 3))
tipo_transporte <- c(rep("regular", 3), rep("não regular", 2))
View(df)
tipo_transporte <- c(rep("regular", 4), rep("não regular", 3))
View(df)
tipo_transporte <- c(rep("transporte regular", 4), rep("transporte não regular", 3))
tipo_transporte <- rep(c(rep("transporte regular", 4), rep("transporte não regular", 3)), 315/7)
315/7
df <- df %>%
mutate(tipo_transporte = tipo_transporte)
View(df)
df <- df %>%
mutate(tipo_transporte = tipo_transporte) %>%
mutate(tipo_transporte = if_else(nome_aeroporto == discriminacao, "total", tipo_transporte))
View(df)
df <- df %>%
mutate(tipo_transporte = tipo_transporte) %>%
mutate(tipo_transporte = if_else(nome_aeroporto == discriminacao, "total", tipo_transporte)) %>%
mutate(tipo_voo = if_else(tipo_transporte == discriminacao | tipo_transporte == "total", "total", discriminacao))
df <- read_excel("Downloads/1.Movimentos_Operacionais_2020.07.xlsx",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clear_strings()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
tipo_transporte <- rep(c(rep("transporte regular", 4), rep("transporte não regular", 3)), 315/7)
df <- df %>%
mutate(tipo_transporte = tipo_transporte) %>%
mutate(tipo_transporte = if_else(nome_aeroporto == discriminacao, "total", tipo_transporte)) %>%
mutate(tipo_voo = if_else(tipo_transporte == discriminacao | tipo_transporte == "total", "total", discriminacao))
View(df)
glimpse(df)
df %>%
filter(nome_aeroporto == "infraero", tipo_transporte == "total", tipo_voo == "total")
total <- df %>%
filter(nome_aeroporto == "infraero", tipo_transporte == "total", tipo_voo == "total")
df %>%
filter(nome_aeroporto != 'infraero')
df %>%
filter(nome_aeroporto != 'infraero') %>%
filter(tipo_transporte == "total", tipo_voo == "total")
df %>%
filter(nome_aeroporto != 'infraero') %>%
filter(tipo_transporte == "total", tipo_voo == "total") %>%
summarise_if(is.numeric, sum)
total
df <- read_excel("Downloads/jan-2.xls",
sheet = "Aeronaves", skip = 4)
View(df)
df <- df %>%
clear_strings()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
df <- read_excel("Downloads/jan-2.xls",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clear_strings()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
View(df)
library(tidyr)
df <- df %>%
drop_na() %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
df %>%
drop_na()
View(df)
df %>%  slice(id_aeroportos) %>% pull(discriminacao)
df <- read_excel("Downloads/jan-2.xls",
sheet = "Aeronaves", skip = 4)
df <- df %>%
clear_strings() %>%
drop_na()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
df %>%  slice(id_aeroportos) %>% pull(discriminacao)
64*9
df <- read_excel("Downloads/jan-2.xls",
sheet = "Aeronaves", skip = 4)
View(df)
?read_excel
df <- df %>%
clear_strings()
id_aeroportos <- seq(1, nrow(df), by = 9)
slice(id_aeroportos) %>% pull(discriminacao)
df %>%  slice(id_aeroportos) %>% pull(discriminacao)
df <- read_excel("Downloads/jan-2.xls",
sheet = "Aeronaves", skip = 4, col_types = "text")
df <- df %>%
clear_strings()
View(df)
df <- df %>%
clear_strings() %>%
drop_na()
id_aeroportos <- seq(1, nrow(df), by = 9)
df <- df %>%
mutate(nome_aeroporto = rep(df %>%  slice(id_aeroportos) %>% pull(discriminacao), each = 9)) %>%
filter(!(discriminacao %in% c("nacional", "regional"))) %>%
glimpse()
tipo_transporte <- rep(c(rep("transporte regular", 4), rep("transporte não regular", 3)), 315/7)
df <- df %>%
mutate(tipo_transporte = tipo_transporte) %>%
mutate(tipo_transporte = if_else(nome_aeroporto == discriminacao, "total", tipo_transporte)) %>%
mutate(tipo_voo = if_else(tipo_transporte == discriminacao | tipo_transporte == "total", "total", discriminacao))
tipo_transporte <- rep(c(rep("transporte regular", 4), rep("transporte não regular", 3)), nrow(df)/7)
df <- df %>%
mutate(tipo_transporte = tipo_transporte) %>%
mutate(tipo_transporte = if_else(nome_aeroporto == discriminacao, "total", tipo_transporte)) %>%
mutate(tipo_voo = if_else(tipo_transporte == discriminacao | tipo_transporte == "total", "total", discriminacao))
total <- df %>%
filter(nome_aeroporto == "infraero", tipo_transporte == "total", tipo_voo == "total")
df %>%
filter(nome_aeroporto != 'infraero') %>%
filter(tipo_transporte == "total", tipo_voo == "total") %>%
summarise_if(is.numeric, sum)
View(df)
total
year = 2016
file <- str_c("Github/datasciencebrigade/", year, ".csv/")
df_licitacao <- suppressWarnings(read_csv(str_c(file, "licitacao.csv")))  %>%
clear_strings()  %>%
filter(tp_objeto == "com")  %>%
mutate(id = str_c(cd_orgao, nr_licitacao, cd_tipo_modalidade))
library(tidyverse)
library(tidytext)
year = 2016
file <- str_c("Github/datasciencebrigade/", year, ".csv/")
df_licitacao <- suppressWarnings(read_csv(str_c(file, "licitacao.csv")))  %>%
clear_strings()  %>%
filter(tp_objeto == "com")  %>%
mutate(id = str_c(cd_orgao, nr_licitacao, cd_tipo_modalidade))
library(janitor)
df_licitacao <- suppressWarnings(read_csv(str_c(file, "licitacao.csv")))  %>%
clear_strings()  %>%
filter(tp_objeto == "com")  %>%
mutate(id = str_c(cd_orgao, nr_licitacao, cd_tipo_modalidade))
ids_compras <- pull(id)
df_item <- suppressWarnings(read_csv(str_c(file, "item.csv")))  %>%
clear_strings()  %>%
mutate(id = paste0(cd_orgao, nr_licitacao, cd_tipo_modalidade)) %>%
filter(id %in% ids_compras)
stopwords_pt <- data.frame(word = tm::stopwords("portuguese"))
compras <- df_item %>%
head(n = 8000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
ids_compras <- pull(id)
df_licitacao <- suppressWarnings(read_csv(str_c(file, "licitacao.csv")))  %>%
clear_strings()  %>%
filter(tp_objeto == "com")  %>%
mutate(id = str_c(cd_orgao, nr_licitacao, cd_tipo_modalidade))
ids_compras <- df_licitacao %>% pull(id)
df_item <- suppressWarnings(read_csv(str_c(file, "item.csv")))  %>%
clear_strings()  %>%
mutate(id = paste0(cd_orgao, nr_licitacao, cd_tipo_modalidade)) %>%
filter(id %in% ids_compras)
stopwords_pt <- data.frame(word = tm::stopwords("portuguese"))
compras <- df_item %>%
head(n = 8000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
df_item <- suppressWarnings(read_csv(str_c(file, "item.csv")))
df_item <- suppressWarnings(read_csv(str_c(file, "item.csv")))  %>%
clear_strings()  %>%
mutate(id = paste0(cd_orgao, nr_licitacao, cd_tipo_modalidade)) %>%
filter(id %in% ids_compras)
stopwords_pt <- data.frame(word = tm::stopwords("portuguese"))
compras <- df_item %>%
head(n = 10000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
View(compras)
compras <- df_item %>%
head(n = 10000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme", "ano",
"peso"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
View(compras)
compras <- df_item %>%
head(n = 10000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme", "ano",
"peso", "cada"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
compras  %>% ungroup()  %>% count(word)  %>% arrange(desc(n))
compras <- df_item %>%
head(n = 10000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme", "ano",
"peso", "cada", "transparente", "verde", "branco"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
compras  %>% ungroup()  %>% count(word)  %>% arrange(desc(n))
compras <- df_item %>%
head(n = 10000) %>%
mutate(ds_item = str_remove_all(ds_item, regex(str_c("\\b", stopwords_pt$word, "\\b", collapse = "|")))) %>%
mutate(ds_item = str_remove_all(ds_item, "\\.|-|\\/|[0-9]")) %>%
unnest_tokens(word, ds_item) %>%
group_by(word) %>%
mutate(n = n()) %>%
filter(nchar(word) > 2) %>%
# Removendo palavras frequentes que não representam o tipo de orgão
filter(!(word %in% c("sul", "rs", "riograndense", "estado", "cia", "porto",
"litros", "unidades", "tamanho", "cor", "cód", "código", "tipo",
"mgml", "tam", "data", "mínimo", "embalagem", "qualidade", "validade",
"mínima", "médio", "meses", "caixa", "fabricação", "conforme", "ano",
"peso", "cada", "transparente", "verde", "branco", "azul", "aquisição"))) %>%
ungroup() %>%
group_by(id) %>%
slice_max(order_by = n, n = 1) %>%
glimpse()
compras  %>% ungroup()  %>% count(word)  %>% arrange(desc(n))
View(df_item)
install.packages("smooth")
setwd("~/Github/projetos/presentations/rladies_gyn")
library(readr)
df_infraero <- read_csv("redefined/aeroportos_atuais.csv")
View(df_infraero)
library(lubridate)
library(smooth)
table(month(df_infraero$data))
library(janitor)
library(dplyr)
library(readxl)
library(purrr)
source("aux_functions.R")
input_folder <- "data/"
list_paths <- str_c(input_folder, list.files(input_folder))
list_dfs <- list_paths %>%
map(possibly(create_month_data, NA))
library(stringr)
source("aux_functions.R")
input_folder <- "data/"
list_paths <- str_c(input_folder, list.files(input_folder))
list_dfs <- list_paths %>%
map(possibly(create_month_data, NA))
id_to_remove <- sapply(list_dfs, function(x) is.data.frame(x))
list_dfs <- list_paths %>%
map(possibly(create_month_data, NA))
View(list_dfs)
list_paths
create_month_data
list_dfs <- list_paths %>%
map(create_month_data)
source("aux_functions.R")
input_folder <- "data/"
list_paths <- str_c(input_folder, list.files(input_folder))
list_dfs <- list_paths %>%
map(create_month_data)
