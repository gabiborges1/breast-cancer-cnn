forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020), 8) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df %>%
select(ano = data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020), 8) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
View(df)
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
split(.$nome_aeroporto) %>%
map_df(function(x) {
getMetrics(x)
})
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
tibble(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
split(.$nome_aeroporto) %>%
map_df(function(x) {
getMetrics(x)
})
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
tibble(forecast_data = tibble(forecast_data), text_data = tibble(text_data), ribbon_data = tibble(ribbon_data))
}
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
split(.$nome_aeroporto) %>%
map(function(x) {
getMetrics(x)
})
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest()
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(map(~ .x))
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest()
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., data = map(data, getMetrics))
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., data = map(data, data))
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., data = map(data, print))
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., data = map(data, getMetrics))
df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics))
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics))
View(df_nested)
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = str_c(perc, "% \n de redução")
)
text_data
# list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics))
View(df_nested)
View(df_nested[[3]][[1]])
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics)) %>%
unnest()
View(df_nested)
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
filter(nome_aeroporto %in% c("sbbe", "sbbh")) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics)) %>%
select(-data) %>%
unnest()
View(df_nested)
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = perc
)
text_data
# list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics)) %>%
select(-data) %>%
unnest()
View(df_nested)
getMetrics <- function(df) {
df <- df %>%
group_by(data) %>%
summarise_if(is.numeric, sum)
df_before_2020 <- df %>%
filter(year(data) < 2020)
forecast_before <- df_before_2020 %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 20) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "before2020") %>%
filter(key == "forecast")
forecast_all <- df %>%
select(data, emb_desemb_no_mes) %>%
timetk::tk_ts(start = c(2012, 1), frequency = 12) %>%
ets() %>%
forecast(h = 13) %>%
sw_sweep(fitted = FALSE) %>%
mutate(model = "all")
forecast_data <- bind_rows(forecast_all, forecast_before) %>%
select(-contains("."))  %>%
mutate(data = as.Date(as.POSIXct(index)))
ribbon_data <- forecast_data %>%
select(model, data, emb_desemb_no_mes) %>%
pivot_wider(
names_from = model,
values_from = emb_desemb_no_mes
) %>%
mutate(perc = round(100*(before2020-all)/before2020, 2)) %>%
drop_na()
text_data <- ribbon_data %>%
filter(month(data) < 07 & perc > 0 & month(data) > 02 & year(data) == 2020) %>%
slice_max(order_by = perc) %>%
mutate(
pos_y = (all + before2020) / 2,
perc = perc
)
text_data
# list(forecast_data = forecast_data, text_data = text_data, ribbon_data = ribbon_data)
}
df_nested <- df %>%
select(data, nome_aeroporto, emb_desemb_no_mes) %>%
group_by(nome_aeroporto) %>%
nest() %>%
mutate(., results = map(data, getMetrics)) %>%
select(-data) %>%
unnest()
View(df_nested)
